{"version":3,"file":"index.module.js","sources":["../src/helpers.ts","../src/hooks.tsx","../src/index.tsx"],"sourcesContent":["import { Point } from './types'\n\n/**\n * This function check if a given point is inside of the items rect.\n * If it's not inside any rect, it will return the index of the closest rect\n */\nexport const findItemIndexAtPosition = (\n  { x, y }: Point,\n  itemsRect: DOMRect[],\n  { fallbackToClosest = false } = {}\n): number => {\n  let smallestDistance = 10000\n  let smallestDistanceIndex = -1\n  for (let index = 0; index < itemsRect.length; index += 1) {\n    const rect = itemsRect[index]\n    // if it's inside the rect, we return the current index directly\n    if (x >= rect.left && x < rect.right && y >= rect.top && y < rect.bottom) {\n      return index\n    }\n    if (fallbackToClosest) {\n      // otherwise we compute the distance and update the smallest distance index if needed\n      const itemCenterX = (rect.left + rect.right) / 2\n      const itemCenterY = (rect.top + rect.bottom) / 2\n\n      const distance = Math.sqrt(Math.pow(x - itemCenterX, 2) + Math.pow(y - itemCenterY, 2)) // ** 2 operator is not supported on IE11\n      if (distance < smallestDistance) {\n        smallestDistance = distance\n        smallestDistanceIndex = index\n      }\n    }\n  }\n  return smallestDistanceIndex\n}\n","import React from 'react'\n\nimport { Point } from './types'\n\nconst getMousePoint = (e: MouseEvent | React.MouseEvent): Point => ({\n  x: Number(e.clientX),\n  y: Number(e.clientY),\n})\n\nconst getTouchPoint = (touch: Touch | React.Touch): Point => ({\n  x: Number(touch.clientX),\n  y: Number(touch.clientY),\n})\n\nconst getPointInContainer = (point: Point, containerTopLeft: Point): Point => {\n  return {\n    x: point.x - containerTopLeft.x,\n    y: point.y - containerTopLeft.y,\n  }\n}\n\nconst preventDefault = (event: Event) => {\n  event.preventDefault()\n}\n\nconst disableContextMenu = () => {\n  window.addEventListener('contextmenu', preventDefault, { capture: true, passive: false })\n}\n\nconst enableContextMenu = () => {\n  window.removeEventListener('contextmenu', preventDefault)\n}\n\nexport type OnStartArgs = { point: Point; pointInWindow: Point }\nexport type OnMoveArgs = { point: Point; pointInWindow: Point }\n\ntype UseDragProps = {\n  onStart?: (args: OnStartArgs) => void\n  onMove?: (args: OnMoveArgs) => void\n  onEnd?: () => void\n  allowDrag?: boolean\n  containerRef: React.MutableRefObject<HTMLElement | null>\n  knobs?: HTMLElement[]\n}\n\nexport const useDrag = ({\n  onStart,\n  onMove,\n  onEnd,\n  allowDrag = true,\n  containerRef,\n  knobs,\n}: UseDragProps) => {\n  // contains the top-left coordinates of the container in the window. Set on drag start and used in drag move\n  const containerPositionRef = React.useRef<Point>({ x: 0, y: 0 })\n  // on touch devices, we only start the drag gesture after pressing the item 200ms.\n  // this ref contains the timer id to be able to cancel it\n  const handleTouchStartTimerRef = React.useRef<number | undefined>(undefined)\n  // on non-touch device, we don't call onStart on mouse down but on the first mouse move\n  // we do this to let the user clicks on clickable element inside the container\n  // this means that the drag gesture actually starts on the fist move\n  const isFirstMoveRef = React.useRef(false)\n  // see https://twitter.com/ValentinHervieu/status/1324407814970920968\n  // we do this so that the parent doesn't have to use `useCallback()` for these callbacks\n  const callbacksRef = React.useRef({ onStart, onMove, onEnd })\n\n  // instead of relying on hacks to know if the device is a touch device or not,\n  // we track this using an onTouchStart listener on the document. (see https://codeburst.io/the-only-way-to-detect-touch-with-javascript-7791a3346685)\n  const [isTouchDevice, setTouchDevice] = React.useState(false)\n\n  React.useEffect(() => {\n    callbacksRef.current = { onStart, onMove, onEnd }\n  }, [onStart, onMove, onEnd])\n\n  const cancelTouchStart = () => {\n    if (handleTouchStartTimerRef.current) {\n      window.clearTimeout(handleTouchStartTimerRef.current)\n    }\n  }\n\n  const saveContainerPosition = React.useCallback(() => {\n    if (containerRef.current) {\n      const bounds = containerRef.current.getBoundingClientRect()\n      containerPositionRef.current = { x: bounds.left, y: bounds.top }\n    }\n  }, [containerRef])\n\n  const onDrag = React.useCallback((pointInWindow: Point) => {\n    const point = getPointInContainer(pointInWindow, containerPositionRef.current)\n    if (callbacksRef.current.onMove) {\n      callbacksRef.current.onMove({ pointInWindow, point })\n    }\n  }, [])\n\n  const onMouseMove = React.useCallback(\n    (e: MouseEvent) => {\n      // if this is the first move, we trigger the onStart logic\n      if (isFirstMoveRef.current) {\n        isFirstMoveRef.current = false\n        const pointInWindow = getMousePoint(e)\n        const point = getPointInContainer(pointInWindow, containerPositionRef.current)\n        if (callbacksRef.current.onStart) {\n          callbacksRef.current.onStart({ point, pointInWindow })\n        }\n      }\n      // otherwise, we do the normal move logic\n      else {\n        onDrag(getMousePoint(e))\n      }\n    },\n    [onDrag]\n  )\n\n  const onTouchMove = React.useCallback(\n    (e: TouchEvent) => {\n      if (e.cancelable) {\n        // Prevent the whole page from scrolling\n        e.preventDefault()\n        onDrag(getTouchPoint(e.touches[0]))\n      } else {\n        // if the event is not cancelable, it means the browser is currently scrolling\n        // which cannot be interrupted. Thus we cancel the drag gesture.\n        document.removeEventListener('touchmove', onTouchMove)\n        if (callbacksRef.current.onEnd) {\n          callbacksRef.current.onEnd()\n        }\n      }\n    },\n    [onDrag]\n  )\n\n  const onMouseUp = React.useCallback(() => {\n    isFirstMoveRef.current = false\n    document.removeEventListener('mousemove', onMouseMove)\n    document.removeEventListener('mouseup', onMouseUp)\n    if (callbacksRef.current.onEnd) {\n      callbacksRef.current.onEnd()\n    }\n  }, [onMouseMove])\n\n  const onTouchEnd = React.useCallback(() => {\n    document.removeEventListener('touchmove', onTouchMove)\n    document.removeEventListener('touchend', onTouchEnd)\n    enableContextMenu()\n    if (callbacksRef.current.onEnd) {\n      callbacksRef.current.onEnd()\n    }\n  }, [onTouchMove])\n\n  const onMouseDown = React.useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      if (e.button !== 0) {\n        // we don't want to handle clicks other than left ones\n        return\n      }\n\n      if (knobs?.length && !knobs.find((knob) => knob.contains(e.target as Node))) {\n        return\n      }\n\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener('mouseup', onMouseUp)\n\n      saveContainerPosition()\n\n      // mark the next move as being the first one\n      isFirstMoveRef.current = true\n    },\n    [onMouseMove, onMouseUp, saveContainerPosition, knobs]\n  )\n\n  const handleTouchStart = React.useCallback(\n    (point: Point, pointInWindow: Point) => {\n      document.addEventListener('touchmove', onTouchMove, { capture: false, passive: false })\n      document.addEventListener('touchend', onTouchEnd)\n      disableContextMenu()\n\n      if (callbacksRef.current.onStart) {\n        callbacksRef.current.onStart({ point, pointInWindow })\n      }\n    },\n    [onTouchEnd, onTouchMove]\n  )\n\n  const onTouchStart = React.useCallback(\n    (e: TouchEvent) => {\n      if (knobs?.length && !knobs.find((knob) => knob.contains(e.target as Node))) {\n        return\n      }\n\n      saveContainerPosition()\n\n      const pointInWindow = getTouchPoint(e.touches[0])\n      const point = getPointInContainer(pointInWindow, containerPositionRef.current)\n\n      // we wait 120ms to start the gesture to be sure that the user\n      // is not trying to scroll the page\n      handleTouchStartTimerRef.current = window.setTimeout(\n        () => handleTouchStart(point, pointInWindow),\n        120\n      )\n    },\n    [handleTouchStart, saveContainerPosition, knobs]\n  )\n\n  const detectTouchDevice = React.useCallback(() => {\n    setTouchDevice(true)\n    document.removeEventListener('touchstart', detectTouchDevice)\n  }, [])\n\n  // if the user is scrolling on mobile, we cancel the drag gesture\n  const touchScrollListener = React.useCallback(() => {\n    cancelTouchStart()\n  }, [])\n\n  React.useLayoutEffect(() => {\n    if (isTouchDevice) {\n      const container = containerRef.current\n\n      if (allowDrag) {\n        container?.addEventListener('touchstart', onTouchStart, { capture: true, passive: false })\n        // we are adding this touchmove listener to cancel drag if user is scrolling\n        // however, it's also important to have a touchmove listener always set\n        // with non-capture and non-passive option to prevent an issue on Safari\n        // with e.preventDefault (https://github.com/atlassian/react-beautiful-dnd/issues/1374)\n        document.addEventListener('touchmove', touchScrollListener, {\n          capture: false,\n          passive: false,\n        })\n        document.addEventListener('touchend', touchScrollListener, {\n          capture: false,\n          passive: false,\n        })\n      }\n\n      return () => {\n        container?.removeEventListener('touchstart', onTouchStart, { capture: true })\n        document.removeEventListener('touchmove', touchScrollListener, { capture: false })\n        document.removeEventListener('touchend', touchScrollListener, { capture: false })\n        document.removeEventListener('touchmove', onTouchMove)\n        document.removeEventListener('touchend', onTouchEnd)\n        enableContextMenu()\n        cancelTouchStart()\n      }\n    }\n    // if non-touch device\n    document.addEventListener('touchstart', detectTouchDevice)\n    return () => {\n      document.removeEventListener('touchstart', detectTouchDevice)\n      document.removeEventListener('mousemove', onMouseMove)\n      document.removeEventListener('mouseup', onMouseUp)\n    }\n  }, [\n    isTouchDevice,\n    allowDrag,\n    detectTouchDevice,\n    onMouseMove,\n    onTouchMove,\n    touchScrollListener,\n    onTouchEnd,\n    onMouseUp,\n    containerRef,\n    onTouchStart,\n  ])\n\n  // on touch devices, we cannot attach the onTouchStart directly via React:\n  // Touch handlers must be added with {passive: false} to be cancelable.\n  // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n  return isTouchDevice ? {} : { onMouseDown }\n}\n\ntype UseDropTargetProps = Partial<{\n  show: (sourceRect: DOMRect) => void\n  hide: () => void\n  setPosition: (index: number, itemsRect: DOMRect[], lockAxis?: 'x' | 'y') => void\n  render: () => React.ReactElement\n}>\n\nexport const useDropTarget = (content?: React.ReactNode): UseDropTargetProps => {\n  const dropTargetRef = React.useRef<HTMLDivElement | null>(null)\n\n  if (!content) {\n    return {}\n  }\n\n  const show = (sourceRect: DOMRect) => {\n    if (dropTargetRef.current) {\n      dropTargetRef.current.style.width = `${sourceRect.width}px`\n      dropTargetRef.current.style.height = `${sourceRect.height}px`\n      dropTargetRef.current.style.opacity = '1'\n      dropTargetRef.current.style.visibility = 'visible'\n    }\n  }\n\n  const hide = () => {\n    if (dropTargetRef.current) {\n      dropTargetRef.current.style.opacity = '0'\n      dropTargetRef.current.style.visibility = 'hidden'\n    }\n  }\n\n  const setPosition = (index: number, itemsRect: DOMRect[], lockAxis?: 'x' | 'y') => {\n    if (dropTargetRef.current) {\n      const sourceRect = itemsRect[index]\n      const newX = lockAxis === 'y' ? sourceRect.left : itemsRect[index].left\n      const newY = lockAxis === 'x' ? sourceRect.top : itemsRect[index].top\n\n      dropTargetRef.current.style.transform = `translate3d(${newX}px, ${newY}px, 0px)`\n    }\n  }\n\n  const DropTargetWrapper = (): React.ReactElement => (\n    <div\n      ref={dropTargetRef}\n      aria-hidden\n      style={{\n        opacity: 0,\n        visibility: 'hidden',\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        pointerEvents: 'none',\n      }}\n    >\n      {content}\n    </div>\n  )\n\n  return {\n    show,\n    hide,\n    setPosition,\n    render: DropTargetWrapper,\n  }\n}\n","import arrayMove from 'array-move'\nimport React, { HTMLAttributes } from 'react'\n\nimport { findItemIndexAtPosition } from './helpers'\nimport { useDrag, useDropTarget } from './hooks'\nimport { Point } from './types'\n\nconst DEFAULT_CONTAINER_TAG = 'div'\n\ntype Props<TTag extends keyof JSX.IntrinsicElements> = HTMLAttributes<TTag> & {\n  children: React.ReactNode\n  /** Determines whether drag functionality is enabled, defaults to true */\n  allowDrag?: boolean\n  /** Called when the user finishes a sorting gesture. */\n  onSortEnd: (oldIndex: number, newIndex: number) => void\n  /** Class applied to the item being dragged */\n  draggedItemClassName?: string\n  /** Determines which type of html tag will be used for a container element */\n  as?: TTag\n  /** Determines if an axis should be locked */\n  lockAxis?: 'x' | 'y'\n  /** Reference to the Custom Holder element */\n  customHolderRef?: React.RefObject<HTMLElement | null>\n  /** Drop target to be used when dragging */\n  dropTarget?: React.ReactNode\n}\n\n// this context is only used so that SortableItems can register/remove themselves\n// from the items list\ntype Context = {\n  registerItem: (item: HTMLElement) => void\n  removeItem: (item: HTMLElement) => void\n  registerKnob: (item: HTMLElement) => void\n  removeKnob: (item: HTMLElement) => void\n}\n\nconst SortableListContext = React.createContext<Context | undefined>(undefined)\nconst SortableList = <TTag extends keyof JSX.IntrinsicElements = typeof DEFAULT_CONTAINER_TAG>({\n  children,\n  allowDrag = true,\n  onSortEnd,\n  draggedItemClassName,\n  as,\n  lockAxis,\n  customHolderRef,\n  dropTarget,\n  ...rest\n}: Props<TTag>) => {\n  // this array contains the elements than can be sorted (wrapped inside SortableItem)\n  const itemsRef = React.useRef<HTMLElement[]>([])\n  // this array contains the coordinates of each sortable element (only computed on dragStart and used in dragMove for perf reason)\n  const itemsRect = React.useRef<DOMRect[]>([])\n  // Hold all registered knobs\n  const knobs = React.useRef<HTMLElement[]>([])\n  // contains the container element\n  const containerRef = React.useRef<HTMLElement | null>(null)\n  // contains the target element (copy of the source element)\n  const targetRef = React.useRef<HTMLElement | null>(null)\n  // contains the index in the itemsRef array of the element being dragged\n  const sourceIndexRef = React.useRef<number | undefined>(undefined)\n  // contains the index in the itemsRef of the element to be exchanged with the source item\n  const lastTargetIndexRef = React.useRef<number | undefined>(undefined)\n  // contains the offset point where the initial drag occurred to be used when dragging the item\n  const offsetPointRef = React.useRef<Point>({ x: 0, y: 0 })\n  // contains the dropTarget logic\n  const dropTargetLogic = useDropTarget(dropTarget)\n\n  React.useEffect(() => {\n    const holder = customHolderRef?.current || document.body\n    return () => {\n      // cleanup the target element from the DOM when SortableList in unmounted\n      if (targetRef.current) {\n        holder.removeChild(targetRef.current)\n      }\n    }\n  }, [customHolderRef])\n\n  const updateTargetPosition = (position: Point) => {\n    if (targetRef.current && sourceIndexRef.current !== undefined) {\n      const offset = offsetPointRef.current\n      const sourceRect = itemsRect.current[sourceIndexRef.current]\n      const newX = lockAxis === 'y' ? sourceRect.left : position.x - offset.x\n      const newY = lockAxis === 'x' ? sourceRect.top : position.y - offset.y\n\n      // we use `translate3d` to force using the GPU if available\n      targetRef.current.style.transform = `translate3d(${newX}px, ${newY}px, 0px)`\n    }\n  }\n\n  const copyItem = React.useCallback(\n    (sourceIndex: number) => {\n      if (!containerRef.current) {\n        return\n      }\n\n      const source = itemsRef.current[sourceIndex]\n      const sourceRect = itemsRect.current[sourceIndex]\n\n      const copy = source.cloneNode(true) as HTMLElement\n\n      // added the \"dragged\" class name\n      if (draggedItemClassName) {\n        draggedItemClassName.split(' ').forEach((c) => copy.classList.add(c))\n      }\n\n      // we ensure the copy has the same size than the source element\n      copy.style.width = `${sourceRect.width}px`\n      copy.style.height = `${sourceRect.height}px`\n      // we place the target starting position to the top left of the window\n      // it will then be moved relatively using `transform: translate3d()`\n      copy.style.position = 'fixed'\n      copy.style.margin = '0'\n      copy.style.top = '0'\n      copy.style.left = '0'\n\n      const sourceCanvases = source.querySelectorAll('canvas')\n      copy.querySelectorAll('canvas').forEach((canvas, index) => {\n        canvas.getContext('2d')?.drawImage(sourceCanvases[index], 0, 0)\n      })\n\n      const holder = customHolderRef?.current || document.body\n      holder.appendChild(copy)\n\n      targetRef.current = copy\n    },\n    [customHolderRef, draggedItemClassName]\n  )\n\n  const listeners = useDrag({\n    allowDrag,\n    containerRef,\n    knobs: knobs.current,\n    onStart: ({ pointInWindow }) => {\n      if (!containerRef.current) {\n        return\n      }\n\n      itemsRect.current = itemsRef.current.map((item) => item.getBoundingClientRect())\n\n      const sourceIndex = findItemIndexAtPosition(pointInWindow, itemsRect.current)\n      // if we are not starting the drag gesture on a SortableItem, we exit early\n      if (sourceIndex === -1) {\n        return\n      }\n\n      // saving the index of the item being dragged\n      sourceIndexRef.current = sourceIndex\n\n      // the item being dragged is copied to the document body and will be used as the target\n      copyItem(sourceIndex)\n\n      // hide source during the drag gesture\n      const source = itemsRef.current[sourceIndex]\n      source.style.opacity = '0'\n      source.style.visibility = 'hidden'\n\n      // get the offset between the source item's window position relative to the point in window\n      const sourceRect = source.getBoundingClientRect()\n      offsetPointRef.current = {\n        x: pointInWindow.x - sourceRect.left,\n        y: pointInWindow.y - sourceRect.top,\n      }\n\n      updateTargetPosition(pointInWindow)\n      dropTargetLogic.show?.(sourceRect)\n\n      // Adds a nice little physical feedback\n      if (window.navigator.vibrate) {\n        window.navigator.vibrate(100)\n      }\n    },\n    onMove: ({ pointInWindow }) => {\n      updateTargetPosition(pointInWindow)\n\n      const sourceIndex = sourceIndexRef.current\n      // if there is no source, we exit early (happened when drag gesture was started outside a SortableItem)\n      if (sourceIndex === undefined || sourceIndexRef.current === undefined) {\n        return\n      }\n\n      const sourceRect = itemsRect.current[sourceIndexRef.current]\n      const targetPoint: Point = {\n        x: lockAxis === 'y' ? sourceRect.left : pointInWindow.x,\n        y: lockAxis === 'x' ? sourceRect.top : pointInWindow.y,\n      }\n\n      const targetIndex = findItemIndexAtPosition(targetPoint, itemsRect.current, {\n        fallbackToClosest: true,\n      })\n      // if not target detected, we don't need to update other items' position\n      if (targetIndex === -1) {\n        return\n      }\n      // we keep track of the last target index (to be passed to the onSortEnd callback)\n      lastTargetIndexRef.current = targetIndex\n\n      const isMovingRight = sourceIndex < targetIndex\n\n      // in this loop, we go over each sortable item and see if we need to update their position\n      for (let index = 0; index < itemsRef.current.length; index += 1) {\n        const currentItem = itemsRef.current[index]\n        const currentItemRect = itemsRect.current[index]\n        // if current index is between sourceIndex and targetIndex, we need to translate them\n        if (\n          (isMovingRight && index >= sourceIndex && index <= targetIndex) ||\n          (!isMovingRight && index >= targetIndex && index <= sourceIndex)\n        ) {\n          // we need to move the item to the previous or next item position\n          const nextItemRects = itemsRect.current[isMovingRight ? index - 1 : index + 1]\n          if (nextItemRects) {\n            const translateX = nextItemRects.left - currentItemRect.left\n            const translateY = nextItemRects.top - currentItemRect.top\n            // we use `translate3d` to force using the GPU if available\n            currentItem.style.transform = `translate3d(${translateX}px, ${translateY}px, 0px)`\n          }\n        }\n        // otherwise, the item should be at its original position\n        else {\n          currentItem.style.transform = 'translate3d(0,0,0)'\n        }\n        // we want the translation to be animated\n        currentItem.style.transitionDuration = '300ms'\n      }\n\n      dropTargetLogic.setPosition?.(lastTargetIndexRef.current, itemsRect.current, lockAxis)\n    },\n    onEnd: () => {\n      // we reset all items translations (the parent is expected to sort the items in the onSortEnd callback)\n      for (let index = 0; index < itemsRef.current.length; index += 1) {\n        const currentItem = itemsRef.current[index]\n        currentItem.style.transform = ''\n        currentItem.style.transitionDuration = ''\n      }\n\n      const sourceIndex = sourceIndexRef.current\n      if (sourceIndex !== undefined) {\n        // show the source item again\n        const source = itemsRef.current[sourceIndex]\n        if (source) {\n          source.style.opacity = '1'\n          source.style.visibility = ''\n        }\n\n        const targetIndex = lastTargetIndexRef.current\n        if (targetIndex !== undefined) {\n          if (sourceIndex !== targetIndex) {\n            // sort our internal items array\n            itemsRef.current = arrayMove(itemsRef.current, sourceIndex, targetIndex)\n            // let the parent know\n            onSortEnd(sourceIndex, targetIndex)\n          }\n        }\n      }\n      sourceIndexRef.current = undefined\n      lastTargetIndexRef.current = undefined\n      dropTargetLogic.hide?.()\n\n      // cleanup the target element from the DOM\n      if (targetRef.current) {\n        const holder = customHolderRef?.current || document.body\n        holder.removeChild(targetRef.current)\n        targetRef.current = null\n      }\n    },\n  })\n\n  const registerItem = React.useCallback((item: HTMLElement) => {\n    itemsRef.current.push(item)\n  }, [])\n\n  const removeItem = React.useCallback((item: HTMLElement) => {\n    const index = itemsRef.current.indexOf(item)\n    if (index !== -1) {\n      itemsRef.current.splice(index, 1)\n    }\n  }, [])\n\n  const registerKnob = React.useCallback((item: HTMLElement) => {\n    knobs.current.push(item)\n  }, [])\n\n  const removeKnob = React.useCallback((item: HTMLElement) => {\n    const index = knobs.current.indexOf(item)\n\n    if (index !== -1) {\n      knobs.current.splice(index, 1)\n    }\n  }, [])\n\n  // we need to memoize the context to avoid re-rendering every children of the context provider\n  // when not needed\n  const context = React.useMemo(() => ({ registerItem, removeItem, registerKnob, removeKnob }), [\n    registerItem,\n    removeItem,\n    registerKnob,\n    removeKnob,\n  ])\n\n  return React.createElement(\n    as || DEFAULT_CONTAINER_TAG,\n    {\n      ...(allowDrag ? listeners : {}),\n      ...rest,\n      ref: containerRef,\n    },\n    <SortableListContext.Provider value={context}>\n      {children}\n      {dropTargetLogic.render?.()}\n    </SortableListContext.Provider>\n  )\n}\n\nexport default SortableList\n\ntype ItemProps = {\n  children: React.ReactElement\n}\n\n/**\n * SortableItem only adds a ref to its children so that we can register it to the main Sortable\n */\nexport const SortableItem = ({ children }: ItemProps) => {\n  const context = React.useContext(SortableListContext)\n  if (!context) {\n    throw new Error('SortableItem must be a child of SortableList')\n  }\n  const { registerItem, removeItem } = context\n  const elementRef = React.useRef<HTMLElement | null>(null)\n\n  React.useEffect(() => {\n    const currentItem = elementRef.current\n    if (currentItem) {\n      registerItem(currentItem)\n    }\n\n    return () => {\n      if (currentItem) {\n        removeItem(currentItem)\n      }\n    }\n    // if the children changes, we want to re-register the DOM node\n  }, [registerItem, removeItem, children])\n\n  return React.cloneElement(children, { ref: elementRef })\n}\n\nexport const SortableKnob = ({ children }: ItemProps) => {\n  const context = React.useContext(SortableListContext)\n\n  if (!context) {\n    throw new Error('SortableKnob must be a child of SortableList')\n  }\n\n  const { registerKnob, removeKnob } = context\n\n  const elementRef = React.useRef<HTMLElement | null>(null)\n\n  React.useEffect(() => {\n    const currentItem = elementRef.current\n\n    if (currentItem) {\n      registerKnob(currentItem)\n    }\n\n    return () => {\n      if (currentItem) {\n        removeKnob(currentItem)\n      }\n    }\n    // if the children changes, we want to re-register the DOM node\n  }, [registerKnob, removeKnob, children])\n\n  return React.cloneElement(children, { ref: elementRef })\n}\n"],"names":["findItemIndexAtPosition","_a","itemsRect","_b","x","y","_c","fallbackToClosest","smallestDistance","smallestDistanceIndex","index","length","rect","left","right","top","bottom","itemCenterX","itemCenterY","distance","Math","sqrt","pow","getMousePoint","e","Number","clientX","clientY","getTouchPoint","touch","getPointInContainer","point","containerTopLeft","preventDefault","event","disableContextMenu","window","addEventListener","capture","passive","enableContextMenu","removeEventListener","useDrag","onStart","onMove","onEnd","allowDrag","containerRef","knobs","containerPositionRef","React","useRef","handleTouchStartTimerRef","undefined","isFirstMoveRef","callbacksRef","useState","isTouchDevice","setTouchDevice","useEffect","current","cancelTouchStart","clearTimeout","saveContainerPosition","useCallback","bounds","getBoundingClientRect","onDrag","pointInWindow","onMouseMove","onTouchMove","cancelable","touches","document","onMouseUp","onTouchEnd","onMouseDown","button","find","knob","contains","target","handleTouchStart","onTouchStart","setTimeout","detectTouchDevice","touchScrollListener","useLayoutEffect","container_1","useDropTarget","content","dropTargetRef","show","sourceRect","style","width","height","opacity","visibility","hide","setPosition","lockAxis","newX","newY","transform","DropTargetWrapper","ref","position","pointerEvents","render","DEFAULT_CONTAINER_TAG","SortableListContext","createContext","SortableList","children","onSortEnd","draggedItemClassName","as","customHolderRef","dropTarget","rest","itemsRef","targetRef","sourceIndexRef","lastTargetIndexRef","offsetPointRef","dropTargetLogic","holder","body","removeChild","updateTargetPosition","offset","copyItem","sourceIndex","source","copy","cloneNode","split","forEach","c","classList","add","margin","sourceCanvases","querySelectorAll","canvas","getContext","drawImage","appendChild","listeners","map","item","navigator","vibrate","targetPoint","targetIndex","isMovingRight","currentItem","currentItemRect","nextItemRects","translateX","translateY","transitionDuration","arrayMove","registerItem","push","removeItem","indexOf","splice","registerKnob","removeKnob","context","useMemo","createElement","Provider","value","SortableItem","useContext","Error","elementRef","cloneElement","SortableKnob"],"mappings":"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"}